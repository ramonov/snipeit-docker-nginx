version: "3.8"

services:
  snipeitapp:
    env_file: .env
    container_name: ${CONTAINER_NAME_PREFIX}app
    build:
      context: ./build
      args:
        PROJECT_PATH: ${PROJECT_PATH}
        PHP_FPM_VERSION: ${PHP_FPM_VERSION}
        INSTALL_NODEJS: ${INSTALL_NODEJS}
    restart: unless-stopped
    tty: true
    working_dir: ${PROJECT_PATH}
    depends_on:
      - snipeitdb
    volumes:
      - ./code:${PROJECT_PATH}
      - ./build/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      local:
        aliases:
          - ${NETWORK}

  snipeitdb:
    image: mysql:${MYSQL_VERSION}
    container_name: ${CONTAINER_NAME_PREFIX}db
    restart: unless-stopped
    ports:
      - ${HOST_DB_PORT}:3306
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_USER_PASSWORD: ${MYSQL_USER_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - snipeitdb:/var/lib/mysql/
      - ./build/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      local:
        aliases:
          - ${NETWORK}
  
  snipeitweb:
    image: nginx
    container_name: ${CONTAINER_NAME_PREFIX}web
    ports:
      - ${NGINX_HTTP_PORT}:80
      #- ${NGINX_HTTPS_PORT}:443
    volumes:
      - ./build/nginx/conf.d/:/etc/nginx/conf.d/
      - ./code:${PROJECT_PATH}:consistent
      - ./build/nginx/log:/var/log/nginx
    depends_on:
      - snipeitapp
    networks:
      local:
        aliases:
          - ${NETWORK}

  snipeitredis:
    image: redis
    volumes:
        - ./build/data/redis:/datadoc
    container_name: ${CONTAINER_NAME_PREFIX}redis
    ports:
        - "6379:6379"
    networks:
      local:
        aliases:
          - ${NETWORK}
#Docker Networks
networks:
  local:
    name: ${NETWORK}
#Volumes
volumes:
  snipeitdb:
    name: ${CONTAINER_NAME_PREFIX}db